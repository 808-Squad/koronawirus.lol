{"version":3,"sources":["utils.js","generation-logic/generate.js","ui/breakpoints.js","ui/ShareButtons.jsx","ui/AppHeader.jsx","ui/AppFooter.jsx","ui/App.jsx","index.jsx"],"names":["shuffleArray","array","i","length","j","Math","floor","random","sessionUuid","uuidv4","generationCounter","commonRequestParams","document","location","chooseLanguage","address","window","href","language","includes","data","dataPath","origin","xhr","XMLHttpRequest","getRandomRange","first","last","delta","arr","concat","result","idx","push","splice","getRandom","n","len","generate","intl","dict","rnd","formatMessage","id","quarantine_days","days","getQuarantineDecision","value1","value2","closedStr","condition","getRestaurantState","lo","hi","getSchoolGradeRange","percentage","Number","between","open","onload","readyState","status","responseText","replace","split","filter","e","console","error","statusText","send","prototype","a","b","this","breakpoints","xs","sm","md","lg","xl","xxl","xxxl","ShareButtonContainer","styled","div","url","ShareButtons","FacebookShareButton","FacebookIcon","size","round","className","style","background","border","margin","paddingLeft","onClick","FacebookMessengerIcon","TwitterShareButton","TwitterIcon","TelegramShareButton","TelegramIcon","LinkedinShareButton","LinkedinIcon","TopBar","TopBarText","LogoContainer","Logo","img","Header","HeaderTitle","HeaderSub","p","AppHeader","src","currentBreakpoint","Footer","FooterText","footer","GithubIcon","span","StarIcon","AppFooter","useIntl","values","govLink","star","githubLogo","githubLink","freepik","title","flaticon","Container","SentencesContainer","SentenceHeader","h2","SentenceList","ul","Sentence","li","StyledButton","button","App","props","useState","sentences","setSentences","buttonLabelId","setButtonLabelId","useEffect","uuid","requestParams","req","join","collectVisit","getValues","indexes","reduce","obj","index","optionalSentences","meta_pl_32_0","meta_pl_32_1","obligatorySentences","meta_pl_7_0","meta_pl_7_1","date","formatDate","Date","day","month","year","finalSentences","map","it","getElementById","scrollIntoView","collectEvent","messagesPath","fetch","then","response","json","ReactDOM","render","StrictMode","messages","locale","defaultLocale"],"mappings":"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","file":"static/js/main.9fa9d028.chunk.js","sourcesContent":["import { v4 as uuidv4 } from 'uuid';\nimport getUserLocale from 'get-user-locale';\n\n// Durstenfeld Shuffle from https://stackoverflow.com/a/12646864/6417161\nexport function shuffleArray(array) {\n    for (let i = array.length - 1; i > 0; i--) {\n        const j = Math.floor(Math.random() * (i + 1));\n        [array[i], array[j]] = [array[j], array[i]];\n    }\n}\n\nconst trackerId = \"UA-188506897-1\";\nconst sessionUuid = uuidv4();\nlet generationCounter = 0;\nconst commonRequestParams = [\n    /*\n     * Proto version: 1\n     * Anonymize IP: true\n     * Client ID: generated for this session\n     * Tracker ID: constant\n     * Document location: document.location\n     */\n    \"v=1\",\n    \"aip=1\",\n    `cid=${sessionUuid}`,\n    `tid=${trackerId}`,\n    `dl=${document.location}`\n];\n\nexport function collectVisit(uuid) {\n    const requestParams = commonRequestParams.concat([\n        /*\n         * Hit type: pageview\n         */\n        \"t=pageview\"\n    ]);\n\n    let req = new XMLHttpRequest();\n    req.open(\"GET\", \"https://www.google-analytics.com/collect?\" + requestParams.join(\"&\"));\n    req.send();\n}\n\nexport function collectEvent(uuid) {\n    generationCounter += 1;\n    const requestParams = commonRequestParams.concat([\n        /*\n         * Hit type: event\n         * Event category: generation\n         * Event Action: generate\n         */\n        \"t=event\",\n        \"ec=generation\",\n        \"ea=generate\",\n        `el=${generationCounter}`\n    ]);\n\n    let req = new XMLHttpRequest();\n    req.open(\"GET\", \"https://www.google-analytics.com/collect?\" + requestParams.join(\"&\"));\n    req.send();\n}\n\nexport function chooseLanguage() {\n    const address = window.location.href\n    const supportedLanguages = [\"pl\", \"en\"]\n\n    for (let language of supportedLanguages) {\n        if (address.includes(`/${language}`)) {\n            return language\n        }\n    }\n\n    return \"pl\"\n}","import { chooseLanguage, shuffleArray } from '../utils'\nimport { useIntl } from 'react-intl'\n\nconst QUARANTINE_MIN = 7;\nconst QUARANTINE_MAX = 14;\n\nlet data = null;\n\nconst dataPath = `${window.location.origin}/lolcontent/${chooseLanguage()}.tsv`\n\nlet xhr = new XMLHttpRequest();\nxhr.open(\"GET\", dataPath, true);\nxhr.onload = () => {\n    if (xhr.readyState === 4) {\n        if (xhr.status === 200) {\n            data = xhr.responseText.replace(/[\\r]+/g, '').split('\\n').filter(e => e);\n            for (let i = 0; i < data.length; i++) {\n                data[i] = data[i].split('\\t').filter(e => e);\n            }\n        } else {\n            console.error(xhr.statusText);\n        }\n    }\n};\nxhr.send(null);\n\nNumber.prototype.between = function(a, b) {\n  return a <= this && this <= b;\n};\n\nfunction getRandomRange(first, last, data) {\n    last += 1;  // Last index in slices etc. is usually 1 higher than what you need\n    const delta = last - first;\n\n    let arr = [];\n    for (let i = first; i < last; i++) {\n        arr = arr.concat(data[i]);\n    }\n    shuffleArray(arr);\n\n    const result = [];\n    for (let i = 0; i < delta; i++) {\n        const idx = Math.floor(Math.random() * (arr.length - 1));\n        result.push(arr.splice(idx, 1));\n    }\n    return result;\n}\n\nfunction getRandom(n, data) {\n    const arr = data[n];\n    const len = arr.length;\n    shuffleArray(arr);\n    const idx = Math.floor(Math.random() * (len - 1));\n    return arr[idx];\n}\n\nfunction getQuarantineDecision(intl) {\n    let rnd = Math.random();\n    if (rnd <= 0.25) {\n        // return \"zwolnione z kwarantanny\";\n        return intl.formatMessage({id: \"dynamicQuarantine1\"});\n    }\n    else {\n        rnd = Math.random();\n        const quarantine_days = QUARANTINE_MIN + Math.floor(rnd * (QUARANTINE_MAX - QUARANTINE_MIN));\n        // return \"zobowiązane do odbycia kwarantanny przez \" + quarantine_days + \" dni\";\n        return intl.formatMessage({id: \"dynamicQuarantine2\"}, { days: quarantine_days });\n    }\n}\n\nfunction getBusSeatsNumber(percentage) {\n    return Math.floor(60 * Number(percentage) / 100);\n}\n\nfunction getRestaurantState(intl, value1, value2) {\n    // if (value1.includes(\"zamknięte\")) {\n    const closedStr = intl.formatMessage({id: \"dynamicRestaurant1\"});\n    if (value1.includes(closedStr)) {\n        return \"\";\n    }\n    // return `, pod warunkiem ${value2}`;\n    return intl.formatMessage({id: \"dynamicRestaurant2\"}, { condition: value2 });\n}\n\nfunction getSchoolGradeRange() {\n    const min = 1;\n    const max = 8;\n    const lo = min + Math.floor(Math.random() * (max - min));\n    const hi = lo + 1 + Math.floor(Math.random() * (max - lo));\n    return `${lo}-${hi}`;\n}\n\nexport default function generate(intl) {\n    let dict = {};\n    [dict[0], dict[1], dict[2], dict[3]] = getRandomRange(0, 3, data);\n    dict[4] = getRandom(4, data);\n    dict[5] = getRandom(5, data);\n    dict[6] = getQuarantineDecision(intl);\n    dict[7] = getRandom(7, data);\n    [dict[8], dict[9], dict[10], dict[11]] = getRandomRange(8, 11, data);\n    [dict[12], dict[13], dict[14], dict[15], dict[16]] = getRandomRange(12, 16, data);\n    dict[17] = getRandom(17, data);\n    dict[18] = getRandom(18, data);\n    dict[19] = getRestaurantState(intl, dict[18], getRandom(19, data));\n    dict[20] = getSchoolGradeRange();\n    dict[21] = getRandom(21, data);\n    dict[22] = getRandom(22, data);\n    dict[23] = getRandom(23, data);\n    dict[24] = getRandom(24, data);\n    dict[25] = getRandom(25, data);\n    [dict[26], dict[27]] = getRandomRange(26, 27, data);\n    dict[28] = getRandom(28, data);\n    dict[29] = getRandom(29, data);\n    dict[30] = getRandom(30, data);\n    dict[31] = getRandom(31, data);\n    dict[32] = getBusSeatsNumber(dict[31]);\n    dict['meta'] = {};\n    dict['meta']['pl'] = {};\n    dict['meta']['pl'][7] = (() => {\n        const n = Number(dict[7]);\n        if ((n % 10).between(2, 4) && !(n % 100).between(12, 14)) {\n            return ['mogą', 'osoby'];\n        }\n        else {\n            return ['może', 'osób'];\n        }\n    })();\n    dict['meta']['pl'][32] = (() => {\n        const n = Number(dict[32]);\n        if ((n % 10).between(2, 4) && !(n % 100).between(12, 14)) {\n            return ['mogą', 'miejsca siedzące'];\n        }\n        else {\n            return ['może', 'miejsc siedzących'];\n        }\n    })();\n    return dict;\n}","const breakpoints = {\n    xs: 0,\n    sm: 576,\n    md: 768,\n    lg: 992,\n    xl: 1200,\n    xxl: 2000,\n    xxxl: 3000\n}\nexport default breakpoints;","import React from 'react'\nimport { \n    FacebookShareButton, \n    FacebookIcon, \n    FacebookMessengerShareButton,\n    FacebookMessengerIcon, \n    TwitterShareButton,\n    TwitterIcon,\n    TelegramShareButton,\n    TelegramIcon,\n    LinkedinShareButton,\n    LinkedinIcon\n} from 'react-share'\nimport styled from 'styled-components';\nimport { chooseLanguage } from '../utils';\n\nconst ShareButtonContainer = styled.div`\n    display: flex;\n    margin-top: 15px;\n    & > button {\n        margin-right: 5px;\n    }\n`\nconst language = chooseLanguage()\n\nconst url = `https://koronawirus.lol/${language !== \"pl\" ? `${language}/` : \"\"}`\n\nconst ShareButtons = ({ }) => (\n    <>\n        <ShareButtonContainer>\n            <FacebookShareButton url={url}>\n                <FacebookIcon size={32} round />\n            </FacebookShareButton>\n            <button className=\"react-share__ShareButton\" style={{ background: 'white', border: 0, margin: 0, paddingLeft: 0 }} onClick={() => {\n                window.location.href = `fb-messenger://share?link=${url}`\n            }}>\n                <FacebookMessengerIcon size={32} round />\n            </button>\n            <TwitterShareButton url={url}>\n                <TwitterIcon size={32} round />\n            </TwitterShareButton>\n            <TelegramShareButton url={url}>\n                <TelegramIcon size={32} round />\n            </TelegramShareButton>\n            <LinkedinShareButton url={url}>\n                <LinkedinIcon size={32} round />\n            </LinkedinShareButton>\n        </ShareButtonContainer>\n    </>\n)\n\nexport default ShareButtons;","import React from 'react'\nimport breakpoints from './breakpoints'\nimport styled from 'styled-components'\nimport { Media } from 'react-breakpoints'\nimport { FormattedMessage } from 'react-intl'\n\n\nconst TopBar = styled.div`\n  display: flex;\n  background-color: rgb(255, 198, 5);\n  width: 100vw;\n  min-height: 30px;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n  @media (min-width: ${breakpoints.md}px) {\n    min-height: 30px;\n  }\n  @media (min-width: ${breakpoints.lg}px) {\n    min-height: 30px;\n  }\n  @media (min-width: ${breakpoints.xxl}px) {\n    min-height: 40px;\n  }\n  @media (min-width: ${breakpoints.xxxl}px) {\n    min-height: 60px;\n  }\n`\n\nconst TopBarText = styled.div`\n  font-weight: bold;\n  font-size: 14px;\n  width: 95vw;\n  @media (min-width: ${breakpoints.md}px) {\n    width: 600px;\n  }\n  @media (min-width: ${breakpoints.lg}px) {\n    width: 750px;\n  }\n  @media (min-width: ${breakpoints.xxl}px) {\n    width: 900px;\n    font-size: 22px;\n  }\n  @media (min-width: ${breakpoints.xxxl}px) {\n    width: 1400px;\n    font-size: 32px;\n  }\n`\n\nconst LogoContainer = styled.div`\n  display: flex;\n  position: relative;\n  flex-direction: column;\n  align-items: center;\n  height: 150px;\n  min-height: 150px;\n  @media (min-width: ${breakpoints.md}px) {\n    height: 200px;\n    min-height: 200px;\n  }\n  @media (min-width: ${breakpoints.xl}px) {\n    height: 230px;\n    min-height: 230px;\n  }\n  @media (min-width: ${breakpoints.xxl}px) {\n    height: 300px;\n    min-height: 300px;\n  }\n  @media (min-width: ${breakpoints.xxxl}px) {\n    height: 400px;\n    min-height: 400px;\n  }\n`\n\nconst Logo = styled.img`\n  height: 100%;\n`\n\nconst Header = styled.div`\n  position: absolute;\n  color: white;\n  font-weight: bold;\n  max-width: 100vw;\n  width: 100vw;\n  text-align: center;\n  display: flex;\n  flex-direction: column;\n  height: 100%;\n  justify-content: center;\n  align-items: center;\n`\n\nconst HeaderTitle = styled.div`\n  margin: 6px;\n  font-size: 24px;\n  max-width: 300px;\n  @media (min-width: ${breakpoints.md}px) {\n    max-width: 90vw;\n    font-size: 36px;\n  }\n  @media (min-width: ${breakpoints.xl}px) {\n    font-size: 42px;\n  }\n  @media (min-width: ${breakpoints.xxl}px) {\n    font-size: 56px;\n  }\n  @media (min-width: ${breakpoints.xxxl}px) {\n    font-size: 72px;\n  }\n`\n\nconst HeaderSub = styled.p`\n  margin: 6px;\n  font-size: 16px;\n  @media (min-width: ${breakpoints.md}px) {\n    font-size: 20px;\n  }\n  @media (min-width: ${breakpoints.xxl}px) {\n    font-size: 28px;\n  }\n  @media (min-width: ${breakpoints.xxxl}px) {\n    font-size: 40px;\n  }\n`\n\nconst AppHeader = ({ }) => (\n  <>\n    <TopBar id=\"topBar\">\n      <TopBarText><FormattedMessage id=\"topBar\" /></TopBarText>\n    </TopBar>\n    <LogoContainer>\n      <Logo src=\"/logo.jpg\" />\n      <Header>\n        <HeaderTitle><FormattedMessage id=\"header\"/></HeaderTitle>\n        <Media>\n          {\n            ({ breakpoints, currentBreakpoint }) => {\n              return breakpoints[currentBreakpoint] >= breakpoints.sm ? (\n                <HeaderSub><FormattedMessage id=\"subHeader\"/></HeaderSub>\n              ) : (\n                <></>\n              )\n            }\n          }\n        </Media>\n      </Header>\n    </LogoContainer>\n  </>\n)\n\nexport default AppHeader\n","import React from 'react'\nimport breakpoints from './breakpoints'\nimport styled from 'styled-components'\nimport { useIntl, FormattedMessage } from 'react-intl'\n\nconst Footer = styled.div`\n  display: flex;\n  margin-top: 1rem;\n  padding: 0.3rem;\n  background-color: white;\n  padding-left: 1rem;\n  padding-right: 1rem;\n  border-top: solid rgb(213, 35, 63) .1875rem;\n  clear: both;\n  width: 100vw;\n  flex-shrink: 0;\n  flex-direction: column;\n  align-items: center;\n`\n\nconst FooterText = styled.footer`\n  width: 95vw;\n  font-size: 11px;\n  font-style: italic;\n  a {\n    color: rgb(15, 55, 100);\n  }\n  a:visited {\n    color: rgb(213, 35, 63);\n  }\n\n  @media (min-width: ${breakpoints.md}px) {\n    font-size: 11px;\n    width: 600px;\n  }\n  @media (min-width: ${breakpoints.lg}px) {\n    width: 750px;\n  }\n  @media (min-width: ${breakpoints.xxl}px) {\n    width: 900px;\n    font-size: 14px;\n  }\n  @media (min-width: ${breakpoints.xxxl}px) {\n    width: 1400px;\n    font-size: 20px;\n  }\n`\n\nconst GithubIcon = styled.span`\n  display: inline-block;\n  width: 15px;\n  height: 1em;\n  background-image: url('/github.svg');\n  background-position: center;\n  background-repeat: no-repeat;\n`\n\nconst StarIcon = styled.span`\n  display: inline-block;\n  width: 15px;\n  height: 1em;\n  background-image: url('/star.svg');\n  background-position: center;\n  background-repeat: no-repeat;\n`\n\nconst AppFooter = ({ }) => {\n  const intl = useIntl()\n  return (\n    <>\n      <Footer>\n        <FooterText>\n          <b><FormattedMessage id=\"footer1\" /></b>&nbsp;\n          <FormattedMessage id=\"footer2\" values={{\n            govLink: <a href={intl.formatMessage({id: \"footerGovAddress\"})}><FormattedMessage id=\"footer3\" /></a>\n          }} />\n          <br />\n          <FormattedMessage id=\"footer4\" values={{\n            star: <StarIcon />,\n            githubLogo: <GithubIcon />,\n            githubLink: <a href=\"https://github.com/808-Squad/koronawirus.lol\"><FormattedMessage id=\"footer5\" /></a>\n          }} />\n          <br />\n          <FormattedMessage id=\"footer6\" values={{\n            freepik: <a href=\"https://www.freepik.com\" title=\"Freepik\">Freepik</a>,\n            flaticon: <a href=\"https://www.flaticon.com/\" title=\"Flaticon\">www.flaticon.com</a>\n          }}/>\n          <br />\n          <FormattedMessage id=\"footer7\" /> 4.02.2021\n        </FooterText>\n      </Footer>\n    </>\n  )\n}\n\nexport default AppFooter\n","import styled from 'styled-components'\nimport React, { useEffect, useState } from 'react'\nimport generate from '../generation-logic/generate'\nimport breakpoints from './breakpoints'\nimport ShareButtons from './ShareButtons'\nimport AppHeader from './AppHeader'\nimport AppFooter from './AppFooter'\nimport { collectEvent, collectVisit, shuffleArray } from '../utils'\nimport { useIntl, FormattedMessage } from 'react-intl'\n\nconst Container = styled.div`\n  height: 100vh;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  font-family: \"Open Sans\", sans-serif;\n  overflow-x: hidden;\n  overflow-y: scroll;\n  -webkit-overflow-scrolling: touch;\n`\n\nconst SentencesContainer = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  flex: 1 0 auto;\n  width: 90vw;\n  @media (min-width: ${breakpoints.md}px) {\n    width: 600px;\n  }\n  @media (min-width: ${breakpoints.lg}px) {\n    width: 750px;\n  }\n  @media (min-width: ${breakpoints.xxl}px) {\n    width: 900px;\n  }\n  @media (min-width: ${breakpoints.xxxl}px) {\n    width: 1400px;\n  }\n`\n\nconst SentenceHeader = styled.h2`\n  font-size: 18px;\n  width: 100%;\n  margin-top: 20px;\n  @media (min-width: ${breakpoints.md}px) {\n    margin-top: 30px;\n    margin-bottom: 15px;\n  }\n  @media (min-width: ${breakpoints.xxl}px) {\n    margin-top: 45px;\n    font-size: 24px;\n  }\n  @media (min-width: ${breakpoints.xxxl}px) {\n    margin-top: 60px;\n    font-size: 36px;\n  }\n`\nconst SentenceList = styled.ul`\n  list-style-position: inside;\n  padding-left: 0;\n  margin: 0;\n  @media (min-width: ${breakpoints.md}px) {\n    padding-left: 1.5em;\n    list-style-position: outside;\n  }\n  @media (min-width: ${breakpoints.xxl}px) {\n    font-size: 20px;\n  }\n  @media (min-width: ${breakpoints.xxxl}px) {\n    font-size: 30px;\n  }\n`\n\nconst Sentence = styled.li`\n  margin: 10px 0;\n  @media (min-width: ${breakpoints.lg}px) {\n    margin: 16px 0;\n  }\n  @media (min-width: ${breakpoints.xxl}px) {\n    margin: 20px 0;\n  }\n  @media (min-width: ${breakpoints.xxxl}px) {\n    margin: 28px 0;\n  }\n`\n\nconst StyledButton = styled.button`\n  background-color: white;\n  color: rgb(213, 35, 63);\n  border: 3px solid;\n  border-radius: 5px;\n  border-color: rgb(213, 35, 63);\n  font-size: 16px;\n  font-weight: bold;\n  padding: 0 1em;\n  min-height: 30px;\n  margin: 10px;\n  cursor: pointer;\n  outline: none;\n  &:hover {\n    background-color: rgb(213, 35, 63);\n    color: white;\n  }\n  @media (min-width: ${breakpoints.md}px) {\n    padding: 0 2em;\n  }\n  @media (min-width: ${breakpoints.xxl}px) {\n    font-size: 20px;\n    min-height: 40px;\n  }\n  @media (min-width: ${breakpoints.xxxl}px) {\n    font-size: 30px;\n    min-height: 60px;\n  }\n`\n\n\n\nfunction App(props) {\n  const intl = useIntl()\n\n  /*\n   * Format:\n   *  sentences[n]          - value for sentence `n`\n   *  sentences['meta'][locale][n]  - additional data for sentence `n` in `locale`\n   */\n  const [sentences, setSentences] = useState(null)\n  const [buttonLabelId, setButtonLabelId] = useState(\"button\")\n\n  useEffect(() => {\n    collectVisit()\n  }, [])\n\n  const getValues = (sentences, indexes) => indexes.reduce((obj, index) => ({\n    ...obj,\n    [index]: sentences[index]\n  }), {})\n\n  const optionalSentences = [\n    (sentences => (<Sentence key=\"2\"><FormattedMessage id=\"sentence2\" values={getValues(sentences, [4, 5, 6])} /></Sentence>)),\n    (sentences => (<Sentence key=\"6\"><FormattedMessage id=\"sentence6\" values={getValues(sentences, [18, 19])} /></Sentence>)),\n    (sentences => (<Sentence key=\"8\"><FormattedMessage id=\"sentence8\" values={getValues(sentences, [25])} /></Sentence>)),\n    (sentences => (<Sentence key=\"10\"><FormattedMessage id=\"sentence10\" values={getValues(sentences, [29, 30])} /></Sentence>)),\n    (sentences => (<Sentence key=\"11\"><FormattedMessage id=\"sentence11\" values={{\n      ...getValues(sentences, [31, 32]),\n      meta_pl_32_0: sentences['meta']['pl'][32][0],\n      meta_pl_32_1: sentences['meta']['pl'][32][1]\n    }} /></Sentence>))\n  ]\n\n  const obligatorySentences = [\n    (sentences => (<Sentence key=\"1\"><FormattedMessage id=\"sentence1\" values={getValues(sentences, [0, 1, 2, 3])}/></Sentence>)),\n    (sentences => (<Sentence key=\"3\"><FormattedMessage id=\"sentence3\" values={{\n      ...getValues(sentences, [7, 8, 9]),\n      meta_pl_7_0: sentences['meta']['pl'][7][0],\n      meta_pl_7_1: sentences['meta']['pl'][7][1]\n    }} /></Sentence>)),\n    (sentences => (<Sentence key=\"4\"><FormattedMessage id=\"sentence4\" values={getValues(sentences, [10, 11])} /></Sentence>)),\n    (sentences => (<Sentence key=\"9\"><FormattedMessage id=\"sentence9\" values={getValues(sentences, [26, 27, 28])} /></Sentence>)),\n    (sentences => (<Sentence key=\"7\"><FormattedMessage id=\"sentence7\" values={getValues(sentences, [20, 21, 22, 23, 24])} /></Sentence>)),\n    (sentences => (<Sentence key=\"5\"><FormattedMessage id=\"sentence5\" values={getValues(sentences, [12, 13, 14, 15, 16, 17])} /></Sentence>))\n  ]\n\n  const buttonAction = () => {\n    setSentences(generate(intl))\n    setButtonLabelId(\"buttonGenerateNew\")\n    document.getElementById('topBar').scrollIntoView()\n    collectEvent()\n  }\n\n  const dateOpts = {\n    day: 'numeric',\n    month: 'long',\n    year: 'numeric'\n  };\n\n  const date = intl.formatDate(new Date(), dateOpts);\n\n  shuffleArray(optionalSentences)\n  const finalSentences = [\n    ...obligatorySentences,\n    optionalSentences[0],\n    optionalSentences[1]\n  ];\n\n  shuffleArray(finalSentences)\n\n  return (\n    <Container>\n      <AppHeader />\n      <SentencesContainer>\n        <SentenceHeader>\n          <FormattedMessage id=\"infoMessage\" values={{ date }} />\n        </SentenceHeader>\n        {sentences && (\n          <SentenceList>\n          {finalSentences.map(it => it(sentences))}\n          </SentenceList>\n        )}\n        <StyledButton onClick={buttonAction}><FormattedMessage id={buttonLabelId} /></StyledButton>\n      </SentencesContainer>\n      <ShareButtons />\n      <AppFooter />\n    </Container>\n  );\n}\n\nexport default App\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './ui/App';\nimport ReactBreakpoints from 'react-breakpoints';\nimport breakpoints from './ui/breakpoints.js';\nimport { IntlProvider } from 'react-intl';\nimport { chooseLanguage } from './utils'\n\nconst language = chooseLanguage()\nconst messagesPath = `${window.location.origin}/messages/${language}.json`;\n\nfetch(messagesPath)\n.then(response => response.json())\n.then(response => {\n  ReactDOM.render(\n    <React.StrictMode>\n      <IntlProvider messages={response} locale={language} defaultLocale={language}>\n        <ReactBreakpoints breakpoints={breakpoints}>\n          <App />\n        </ReactBreakpoints>\n      </IntlProvider>\n    </React.StrictMode>,\n    document.getElementById('root')\n  );\n})\n"],"sourceRoot":""}